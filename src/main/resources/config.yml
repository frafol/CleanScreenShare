#   ___  __    ____    __    _  _   ___  ___
#  / __)(  )  ( ___)  /__\  ( \( ) / __)/ __)
# ( (__  )(__  )__)  /(__)\  )  (  \__ \\__ \
#  \___)(____)(____)(__)(__)(_)\_) (___/(___/
# Configuration file. Made with ‚ù§ by frafol.
# For support: https://discord.com/invite/sTSwaGBCdC

settings:

  # Name of the ScreenShare servers where CleanScreenShare have to send players on control.
  # You can add multiple servers.
  control_servers:
    - "hackcontrol_1"
    # - "hackcontrol_2"

  # The server name that will be used to send the players at the end of a control.
  # You can add multiple servers.
  # NOTE: if the value use_disconnect_instead_of_fallback is true, this setting will be ignored.
  fallback_servers:
    - "hub1"
    # - "hub2"

  # The strategy used to sort the servers (when there are multiple servers in the list).
  # VALUES: RANDOM, LEAST_PLAYERS, MOST_PLAYERS.
  # WARNING: Only MOST_PLAYERS will check if the server is full.
  sort_strategy: "LEAST_PLAYERS"

  # Players on these servers will not be able to be controlled by anyone.
  blocked_servers:
    - "auth1"
    - "auth2"

  # Disconnect the player from the control server instead of taking it to a fallback server.
  # It can be useful if you use plugins that allow multi lobby fallback (e.g., FallbackServer).
  # NOTE: This function will break CleanScreenShare if you haven't also put it on the server control!
  use_disconnect_instead_of_fallback: false

  # Makes the server staff to remain connected in the hack control server after the end of the control.
  do_not_fallback_staff: false

  # This will check if you have been properly connected to the control server,
  # and if not, it will exit the control. If you encounter an error in the console
  # telling you that the server may be offline or crashed,
  # but you are sure that this is active, disable this feature.
  check_for_problems: true

  # This will disable a check that pings the control server before connecting to prevent problems.
  # If you disable ping, the plugin may break if your control server is offline.
  # This can be useful to get past an annoying offline server error given by BungeeCord's incapable ping system
  # (velocity does not have this problem). NOTE: it is not recommended to disable ping.
  disable_ping_check: false

  # This will set the delay between each ping check in seconds.
  # Decreasing this value may increase the lag on your server.
  ping_delay: 5

  # This will enable premiumvanish/velocityvanish hook.
  # With this, you can show the number of players online without counting vanished players in Discord webhook.
  # With this you can also block staff to control vanished players.
  # VelocityVanish works only with Velocity.
  premiumvanish_hook: false
  velocityvanish_hook: false

  # Check for plugin updates.
  update_check: true
  update_alert: true

  # Automatically update the plugin.
  auto_update: false

  # Enables telemetry.
  stats: true

  start:

    # By activating this feature, the staffer(s) who have permission to control
    # will receive a notification when another staffer brings in a player for control.
    send_admin_message: true

    # Delay (in milliseconds) of the message that will be sent to the control server with player's information.
    # Increment this if the control server says that the player is not connected.
    # Decrement this if you want a more rapid connection and synchronization with your Spigot server.
    # NOTE: Do not change this value if you don't know what you're doing. Do not set it to <=0 values and >=20000 values.
    server_message_delay: 500

    # By activating this feature, for every command execute by a staff member, the plugin will require a confirmation.
    admin_commands:
      request: false
      time_over: 10 # In seconds

      # You can put commands that not requires any confirmation and will be executed immediately.
      allowed_commands:
        - "ssfinish"
        - "sspect"

  slog:

    # Enable this if you want to punish the player when it left during a control.
    punish: false

    # Enter your used ban commands, to predict whether the player has been banned or not.
    ban_commands:
      - "tempban"
      - "ban"
      - "ban-ip"
      - "kick"
      - "ipban"
      - "tempipban"

    # Enter the command to be executed by the console when the player disconnects from the server.
    # You can use %player% to get the suspect's name and %admin% to get the staff member's name.
    punish_command: "ban %player% Slog under hack control -s"

  spectate:

    # Enable this if you want to enable the spectator mode.
    enable: true

    # Enable this if you want to disable the chat for spectators.
    # If this is false, the chat for spectators WON'T be handled by CleanScreenShare.
    block_chat: true

permissions:

  # You can personalize permissions.
  control: screenshare.control
  info: screenshare.info
  spectate: screenshare.spectate
  bypass: screenshare.bypass
  reload: screenshare.reload

discord-webhook:

  # The Discord Integration is an experimental feature, report all problems on our Discord.
  # Find out how to set up your discord bot through the Discord Web Developer Application via this link.
  # https://www.ionos.com/digitalguide/server/know-how/creating-discord-bot/#:~:text=Creating%20your%20own%20Discord%20bot

  # Toggle discord feature.
  enabled: false

  # Your Discord bot's token.
  token: ""

  # Status: ONLINE, IDLE, DND, INVISIBLE.
  status: "ONLINE"

  # Types: WATCHING, PLAYING, STREAMING.
  activity_type: "WATCHING"

  # The Discord bot's activity. You can use %players% to see the amount of players online.
  # You can use %players%, %suspicious% and %players_formatted%.
  activity: "%players% online players."

  # To use CleanScreenShare with Discord, enter the ID of the chat where you want messages to be sent.
  channel_id: ""

  # The 'title' of the embed message sent on Discord.
  embed_title: "ScreenShare handler"

  # The 'footer' of the embed message sent on Discord.
  embed_footer: "Powered by CleanScreenShare"
  embed_footer_icon: "none" # You can use a link to an image.

  # You can use also %allplayers% to include staff members.
  # Staffers displays people with control permission.
  discord_players_formatted_placeholder: "%players% players (%staffers% staffers)."

mysql:

  # The MySQL database is an experimental feature.
  # It's just to allow compatibility with multiple proxies (e.g. RedisBungee and RedisVelocity).
  # If it's disabled, the plugin will use the local storage for saving data.
  enable: false

  # MySQL database connection details.
  host: "127.0.0.1:3306"
  user: "root"
  database: "cleanscreenshare"
  password: "password"
  arguments: "?autoReconnect=true&maxReconnects=10"

# Enjoy.
